"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/scan/route";
exports.ids = ["app/api/scan/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fscan%2Froute&page=%2Fapi%2Fscan%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscan%2Froute.ts&appDir=C%3A%5CUsers%5CLogan%20Ferris%5CDownloads%5Cteams-file-organizer%5Capp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CLogan%20Ferris%5CDownloads%5Cteams-file-organizer%5Capp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fscan%2Froute&page=%2Fapi%2Fscan%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscan%2Froute.ts&appDir=C%3A%5CUsers%5CLogan%20Ferris%5CDownloads%5Cteams-file-organizer%5Capp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CLogan%20Ferris%5CDownloads%5Cteams-file-organizer%5Capp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_Logan_Ferris_Downloads_teams_file_organizer_app_app_api_scan_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/scan/route.ts */ \"(rsc)/./app/api/scan/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/scan/route\",\n        pathname: \"/api/scan\",\n        filename: \"route\",\n        bundlePath: \"app/api/scan/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\Logan Ferris\\\\Downloads\\\\teams-file-organizer\\\\app\\\\app\\\\api\\\\scan\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_Logan_Ferris_Downloads_teams_file_organizer_app_app_api_scan_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/scan/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzY2FuJTJGcm91dGUmcGFnZT0lMkZhcGklMkZzY2FuJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGc2NhbiUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNMb2dhbiUyMEZlcnJpcyU1Q0Rvd25sb2FkcyU1Q3RlYW1zLWZpbGUtb3JnYW5pemVyJTVDYXBwJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNMb2dhbiUyMEZlcnJpcyU1Q0Rvd25sb2FkcyU1Q3RlYW1zLWZpbGUtb3JnYW5pemVyJTVDYXBwJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUN1QztBQUNwSDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2FwcC8/YWE3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxMb2dhbiBGZXJyaXNcXFxcRG93bmxvYWRzXFxcXHRlYW1zLWZpbGUtb3JnYW5pemVyXFxcXGFwcFxcXFxhcHBcXFxcYXBpXFxcXHNjYW5cXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3NjYW4vcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9zY2FuXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9zY2FuL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcTG9nYW4gRmVycmlzXFxcXERvd25sb2Fkc1xcXFx0ZWFtcy1maWxlLW9yZ2FuaXplclxcXFxhcHBcXFxcYXBwXFxcXGFwaVxcXFxzY2FuXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9zY2FuL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fscan%2Froute&page=%2Fapi%2Fscan%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscan%2Froute.ts&appDir=C%3A%5CUsers%5CLogan%20Ferris%5CDownloads%5Cteams-file-organizer%5Capp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CLogan%20Ferris%5CDownloads%5Cteams-file-organizer%5Capp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/scan/route.ts":
/*!*******************************!*\
  !*** ./app/api/scan/route.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_microsoft_graph__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/microsoft-graph */ \"(rsc)/./lib/microsoft-graph.ts\");\n/* harmony import */ var _lib_categorization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/categorization */ \"(rsc)/./lib/categorization.ts\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n/* harmony import */ var _lib_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/types */ \"(rsc)/./lib/types.ts\");\n\n\n\n\n\nconst dynamic = \"force-dynamic\";\nasync function POST() {\n    try {\n        // Create a new scan session\n        const scanSession = await _lib_db__WEBPACK_IMPORTED_MODULE_3__.prisma.scanSession.create({\n            data: {\n                status: \"RUNNING\",\n                startedAt: new Date()\n            }\n        });\n        // Start the scanning process in the background\n        scanFilesInBackground(scanSession.id);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            sessionId: scanSession.id,\n            status: \"RUNNING\",\n            message: \"File scanning started\"\n        });\n    } catch (error) {\n        console.error(\"Error starting scan:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to start scan\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const sessionId = searchParams.get(\"sessionId\");\n        if (sessionId) {\n            // Get specific scan session status\n            const session = await _lib_db__WEBPACK_IMPORTED_MODULE_3__.prisma.scanSession.findUnique({\n                where: {\n                    id: sessionId\n                }\n            });\n            if (!session) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    error: \"Scan session not found\"\n                }, {\n                    status: 404\n                });\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(session);\n        } else {\n            // Get latest scan session\n            const latestSession = await _lib_db__WEBPACK_IMPORTED_MODULE_3__.prisma.scanSession.findFirst({\n                orderBy: {\n                    startedAt: \"desc\"\n                }\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(latestSession);\n        }\n    } catch (error) {\n        console.error(\"Error fetching scan status:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch scan status\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function scanFilesInBackground(sessionId) {\n    try {\n        let totalFilesFound = 0;\n        let totalFilesProcessed = 0;\n        const errors = [];\n        // Get all teams\n        const teams = await _lib_db__WEBPACK_IMPORTED_MODULE_3__.prisma.team.findMany();\n        for (const team of teams){\n            try {\n                // Get channels for this team\n                const channels = await _lib_db__WEBPACK_IMPORTED_MODULE_3__.prisma.channel.findMany({\n                    where: {\n                        teamId: team.id\n                    }\n                });\n                for (const channel of channels){\n                    try {\n                        // Scan files in this channel\n                        const microsoftFiles = await _lib_microsoft_graph__WEBPACK_IMPORTED_MODULE_1__.graphService.getChannelFiles(team.teamId, channel.channelId);\n                        totalFilesFound += microsoftFiles.length;\n                        // Process each file\n                        for (const msFile of microsoftFiles){\n                            try {\n                                // Categorize the file\n                                const categorization = _lib_categorization__WEBPACK_IMPORTED_MODULE_2__.categorizationEngine.categorizeFile(msFile.name, msFile.parentReference.path, msFile.file?.mimeType || \"application/octet-stream\");\n                                // Get file extension\n                                const extension = msFile.name.includes(\".\") ? msFile.name.substring(msFile.name.lastIndexOf(\".\")) : null;\n                                // Store file in database\n                                await _lib_db__WEBPACK_IMPORTED_MODULE_3__.prisma.file.upsert({\n                                    where: {\n                                        fileId: msFile.id\n                                    },\n                                    update: {\n                                        name: msFile.name,\n                                        size: BigInt(msFile.size),\n                                        mimeType: msFile.file?.mimeType || \"application/octet-stream\",\n                                        extension,\n                                        webUrl: msFile.webUrl,\n                                        downloadUrl: msFile.downloadUrl,\n                                        parentPath: msFile.parentReference.path,\n                                        relativePath: msFile.parentReference.path,\n                                        category: categorization.category,\n                                        confidence: categorization.confidence,\n                                        status: _lib_types__WEBPACK_IMPORTED_MODULE_4__.FileStatus.CATEGORIZED,\n                                        modifiedAt: new Date(msFile.lastModifiedDateTime),\n                                        lastScannedAt: new Date(),\n                                        teamId: team.id,\n                                        channelId: channel.id\n                                    },\n                                    create: {\n                                        fileId: msFile.id,\n                                        name: msFile.name,\n                                        size: BigInt(msFile.size),\n                                        mimeType: msFile.file?.mimeType || \"application/octet-stream\",\n                                        extension,\n                                        webUrl: msFile.webUrl,\n                                        downloadUrl: msFile.downloadUrl,\n                                        parentPath: msFile.parentReference.path,\n                                        relativePath: msFile.parentReference.path,\n                                        category: categorization.category,\n                                        confidence: categorization.confidence,\n                                        status: _lib_types__WEBPACK_IMPORTED_MODULE_4__.FileStatus.CATEGORIZED,\n                                        modifiedAt: new Date(msFile.lastModifiedDateTime),\n                                        lastScannedAt: new Date(),\n                                        teamId: team.id,\n                                        channelId: channel.id\n                                    }\n                                });\n                                // Store categorization history\n                                await _lib_db__WEBPACK_IMPORTED_MODULE_3__.prisma.categorizationHistory.create({\n                                    data: {\n                                        fileId: msFile.id,\n                                        newCategory: categorization.category,\n                                        confidence: categorization.confidence,\n                                        reason: categorization.reason\n                                    }\n                                });\n                                totalFilesProcessed++;\n                                // Update scan session progress\n                                await _lib_db__WEBPACK_IMPORTED_MODULE_3__.prisma.scanSession.update({\n                                    where: {\n                                        id: sessionId\n                                    },\n                                    data: {\n                                        filesFound: totalFilesFound,\n                                        filesProcessed: totalFilesProcessed\n                                    }\n                                });\n                            } catch (fileError) {\n                                console.error(`Error processing file ${msFile.name}:`, fileError);\n                                errors.push(`Error processing file ${msFile.name}: ${fileError}`);\n                            }\n                        }\n                    } catch (channelError) {\n                        console.error(`Error scanning channel ${channel.displayName}:`, channelError);\n                        errors.push(`Error scanning channel ${channel.displayName}: ${channelError}`);\n                    }\n                }\n            } catch (teamError) {\n                console.error(`Error scanning team ${team.displayName}:`, teamError);\n                errors.push(`Error scanning team ${team.displayName}: ${teamError}`);\n            }\n        }\n        // Complete the scan session\n        await _lib_db__WEBPACK_IMPORTED_MODULE_3__.prisma.scanSession.update({\n            where: {\n                id: sessionId\n            },\n            data: {\n                status: \"COMPLETED\",\n                completedAt: new Date(),\n                filesFound: totalFilesFound,\n                filesProcessed: totalFilesProcessed,\n                errors: errors.length > 0 ? errors : undefined\n            }\n        });\n        // Log the activity\n        await _lib_db__WEBPACK_IMPORTED_MODULE_3__.prisma.activityLog.create({\n            data: {\n                action: \"SCAN_COMPLETED\",\n                description: `Scan completed: ${totalFilesProcessed}/${totalFilesFound} files processed`,\n                metadata: {\n                    sessionId,\n                    filesFound: totalFilesFound,\n                    filesProcessed: totalFilesProcessed,\n                    errors: errors.length\n                }\n            }\n        });\n    } catch (error) {\n        console.error(\"Error in background scan:\", error);\n        // Mark scan as failed\n        await _lib_db__WEBPACK_IMPORTED_MODULE_3__.prisma.scanSession.update({\n            where: {\n                id: sessionId\n            },\n            data: {\n                status: \"FAILED\",\n                completedAt: new Date(),\n                errors: [\n                    error instanceof Error ? error.message : \"Unknown error\"\n                ]\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/scan/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/categorization.ts":
/*!*******************************!*\
  !*** ./lib/categorization.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CategorizationEngine: () => (/* binding */ CategorizationEngine),\n/* harmony export */   categorizationEngine: () => (/* binding */ categorizationEngine)\n/* harmony export */ });\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"(rsc)/./lib/types.ts\");\n\nconst CATEGORIZATION_RULES = [\n    {\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.FileCategory.ESTIMATING,\n        keywords: [\n            \"estimate\",\n            \"bid\",\n            \"quote\",\n            \"proposal\",\n            \"cost\",\n            \"pricing\",\n            \"takeoff\",\n            \"quantity\"\n        ],\n        extensions: [\n            \".xlsx\",\n            \".xls\",\n            \".csv\"\n        ],\n        pathPatterns: [\n            \"estimat\",\n            \"bid\",\n            \"quote\",\n            \"proposal\"\n        ],\n        priority: 10\n    },\n    {\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.FileCategory.OPERATIONS,\n        keywords: [\n            \"operation\",\n            \"project\",\n            \"schedule\",\n            \"timeline\",\n            \"workflow\",\n            \"process\",\n            \"procedure\"\n        ],\n        extensions: [\n            \".pdf\",\n            \".docx\",\n            \".doc\"\n        ],\n        pathPatterns: [\n            \"operation\",\n            \"project\",\n            \"schedule\",\n            \"workflow\"\n        ],\n        priority: 9\n    },\n    {\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.FileCategory.ACCOUNTING,\n        keywords: [\n            \"invoice\",\n            \"receipt\",\n            \"expense\",\n            \"payment\",\n            \"billing\",\n            \"account\",\n            \"ledger\",\n            \"journal\"\n        ],\n        extensions: [\n            \".pdf\",\n            \".xlsx\",\n            \".xls\"\n        ],\n        pathPatterns: [\n            \"accounting\",\n            \"invoice\",\n            \"billing\",\n            \"expense\"\n        ],\n        priority: 10\n    },\n    {\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.FileCategory.FINANCE,\n        keywords: [\n            \"budget\",\n            \"financial\",\n            \"profit\",\n            \"loss\",\n            \"revenue\",\n            \"cash\",\n            \"flow\",\n            \"statement\"\n        ],\n        extensions: [\n            \".xlsx\",\n            \".xls\",\n            \".pdf\"\n        ],\n        pathPatterns: [\n            \"finance\",\n            \"budget\",\n            \"financial\"\n        ],\n        priority: 9\n    },\n    {\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.FileCategory.MARKETING,\n        keywords: [\n            \"marketing\",\n            \"advertisement\",\n            \"promotion\",\n            \"brochure\",\n            \"flyer\",\n            \"campaign\",\n            \"brand\"\n        ],\n        extensions: [\n            \".pdf\",\n            \".jpg\",\n            \".png\",\n            \".psd\",\n            \".ai\"\n        ],\n        pathPatterns: [\n            \"marketing\",\n            \"promo\",\n            \"brand\",\n            \"campaign\"\n        ],\n        priority: 8\n    },\n    {\n        category: _types__WEBPACK_IMPORTED_MODULE_0__.FileCategory.OFFICE,\n        keywords: [\n            \"memo\",\n            \"policy\",\n            \"procedure\",\n            \"handbook\",\n            \"manual\",\n            \"template\",\n            \"form\"\n        ],\n        extensions: [\n            \".docx\",\n            \".doc\",\n            \".pdf\",\n            \".txt\"\n        ],\n        pathPatterns: [\n            \"office\",\n            \"admin\",\n            \"policy\",\n            \"template\"\n        ],\n        priority: 7\n    }\n];\nclass CategorizationEngine {\n    categorizeFile(fileName, filePath, mimeType) {\n        const normalizedName = fileName.toLowerCase();\n        const normalizedPath = filePath.toLowerCase();\n        const extension = this.getFileExtension(fileName);\n        let bestMatch = {\n            category: _types__WEBPACK_IMPORTED_MODULE_0__.FileCategory.UNCATEGORIZED,\n            confidence: 0,\n            reason: \"No matching rules found\"\n        };\n        for (const rule of CATEGORIZATION_RULES){\n            const score = this.calculateRuleScore(rule, normalizedName, normalizedPath, extension);\n            if (score > bestMatch.confidence) {\n                bestMatch = {\n                    category: rule.category,\n                    confidence: score,\n                    reason: this.generateReason(rule, normalizedName, normalizedPath, extension)\n                };\n            }\n        }\n        // Ensure confidence is between 0 and 1\n        bestMatch.confidence = Math.min(bestMatch.confidence, 1.0);\n        return bestMatch;\n    }\n    calculateRuleScore(rule, fileName, filePath, extension) {\n        let score = 0;\n        const maxScore = 100;\n        // Check keywords in filename (40% weight)\n        const keywordMatches = rule.keywords.filter((keyword)=>fileName.includes(keyword.toLowerCase())).length;\n        if (keywordMatches > 0) {\n            score += keywordMatches / rule.keywords.length * 40;\n        }\n        // Check keywords in path (30% weight)\n        const pathKeywordMatches = rule.keywords.filter((keyword)=>filePath.includes(keyword.toLowerCase())).length;\n        if (pathKeywordMatches > 0) {\n            score += pathKeywordMatches / rule.keywords.length * 30;\n        }\n        // Check path patterns (20% weight)\n        const pathPatternMatches = rule.pathPatterns.filter((pattern)=>filePath.includes(pattern.toLowerCase())).length;\n        if (pathPatternMatches > 0) {\n            score += pathPatternMatches / rule.pathPatterns.length * 20;\n        }\n        // Check file extension (10% weight)\n        if (rule.extensions.includes(extension.toLowerCase())) {\n            score += 10;\n        }\n        // Apply priority multiplier\n        score = score / maxScore * (rule.priority / 10);\n        return score;\n    }\n    generateReason(rule, fileName, filePath, extension) {\n        const reasons = [];\n        // Check what matched\n        const keywordMatches = rule.keywords.filter((keyword)=>fileName.includes(keyword.toLowerCase()));\n        if (keywordMatches.length > 0) {\n            reasons.push(`filename contains: ${keywordMatches.join(\", \")}`);\n        }\n        const pathKeywordMatches = rule.keywords.filter((keyword)=>filePath.includes(keyword.toLowerCase()));\n        if (pathKeywordMatches.length > 0) {\n            reasons.push(`path contains: ${pathKeywordMatches.join(\", \")}`);\n        }\n        const pathPatternMatches = rule.pathPatterns.filter((pattern)=>filePath.includes(pattern.toLowerCase()));\n        if (pathPatternMatches.length > 0) {\n            reasons.push(`path pattern: ${pathPatternMatches.join(\", \")}`);\n        }\n        if (rule.extensions.includes(extension.toLowerCase())) {\n            reasons.push(`file type: ${extension}`);\n        }\n        return reasons.length > 0 ? reasons.join(\"; \") : \"Rule matched\";\n    }\n    getFileExtension(fileName) {\n        const lastDotIndex = fileName.lastIndexOf(\".\");\n        return lastDotIndex > 0 ? fileName.substring(lastDotIndex) : \"\";\n    }\n    // Learn from user corrections\n    async learnFromCorrection(fileName, filePath, mimeType, oldCategory, newCategory) {\n        // This would be implemented to update ML models or rules\n        // For now, we'll just log the correction\n        console.log(\"Learning from correction:\", {\n            fileName,\n            filePath,\n            mimeType,\n            oldCategory,\n            newCategory\n        });\n    // In a production system, this would:\n    // 1. Store the correction in the database\n    // 2. Update rule weights or create new rules\n    // 3. Retrain ML models if applicable\n    }\n    // Get category statistics for learning\n    getCategoryKeywords(category) {\n        const rule = CATEGORIZATION_RULES.find((r)=>r.category === category);\n        return rule ? rule.keywords : [];\n    }\n    // Suggest improvements based on manual corrections\n    async suggestRuleImprovements() {\n        // This would analyze categorization history and suggest rule improvements\n        return [\n            \"Consider adding more keywords for better accuracy\",\n            \"Review path patterns for common folder structures\",\n            \"Analyze file extensions for category-specific types\"\n        ];\n    }\n}\nconst categorizationEngine = new CategorizationEngine();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/categorization.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZDO0FBRTdDLE1BQU1DLGtCQUFrQkM7QUFJakIsTUFBTUMsU0FBU0YsZ0JBQWdCRSxNQUFNLElBQUksSUFBSUgsd0RBQVlBLEdBQUU7QUFFbEUsSUFBSUksSUFBeUIsRUFBY0gsZ0JBQWdCRSxNQUFNLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXBwLy4vbGliL2RiLnRzPzFkZjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnXG5cbmNvbnN0IGdsb2JhbEZvclByaXNtYSA9IGdsb2JhbFRoaXMgYXMgdW5rbm93biBhcyB7XG4gIHByaXNtYTogUHJpc21hQ2xpZW50IHwgdW5kZWZpbmVkXG59XG5cbmV4cG9ydCBjb25zdCBwcmlzbWEgPSBnbG9iYWxGb3JQcmlzbWEucHJpc21hID8/IG5ldyBQcmlzbWFDbGllbnQoKVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA9IHByaXNtYVxuIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsImdsb2JhbEZvclByaXNtYSIsImdsb2JhbFRoaXMiLCJwcmlzbWEiLCJwcm9jZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./lib/microsoft-graph.ts":
/*!********************************!*\
  !*** ./lib/microsoft-graph.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MicrosoftGraphService: () => (/* binding */ MicrosoftGraphService),\n/* harmony export */   graphService: () => (/* binding */ graphService)\n/* harmony export */ });\n/* harmony import */ var _microsoft_microsoft_graph_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @microsoft/microsoft-graph-client */ \"(rsc)/./node_modules/@microsoft/microsoft-graph-client/lib/es/src/index.js\");\n/* harmony import */ var _azure_msal_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-node */ \"(rsc)/./node_modules/@azure/msal-node/dist/index.mjs\");\n/* harmony import */ var isomorphic_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! isomorphic-fetch */ \"(rsc)/./node_modules/isomorphic-fetch/fetch-npm-node.js\");\n/* harmony import */ var isomorphic_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(isomorphic_fetch__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nclass GraphAuthProvider {\n    constructor(){\n        // Check if we have the required environment variables\n        const clientId = process.env.AZURE_CLIENT_ID;\n        const clientSecret = process.env.AZURE_CLIENT_SECRET;\n        const tenantId = process.env.AZURE_TENANT_ID;\n        if (!clientId || !clientSecret || !tenantId) {\n            throw new Error(\"Missing Azure credentials. Please check your environment variables.\");\n        }\n        this.msalInstance = new _azure_msal_node__WEBPACK_IMPORTED_MODULE_1__.ConfidentialClientApplication({\n            auth: {\n                clientId,\n                clientSecret,\n                authority: `https://login.microsoftonline.com/${tenantId}`\n            }\n        });\n    }\n    async getAccessToken() {\n        try {\n            const clientCredentialRequest = {\n                scopes: [\n                    \"https://graph.microsoft.com/.default\"\n                ]\n            };\n            const response = await this.msalInstance.acquireTokenByClientCredential(clientCredentialRequest);\n            return response?.accessToken || \"\";\n        } catch (error) {\n            console.error(\"Error acquiring token:\", error);\n            throw new Error(\"Failed to acquire access token\");\n        }\n    }\n}\nclass MicrosoftGraphService {\n    constructor(){\n        this.graphClient = null;\n        this.authProvider = null;\n        this.initError = null;\n        try {\n            this.authProvider = new GraphAuthProvider();\n            this.graphClient = _microsoft_microsoft_graph_client__WEBPACK_IMPORTED_MODULE_0__.Client.initWithMiddleware({\n                authProvider: this.authProvider\n            });\n        } catch (error) {\n            this.initError = error instanceof Error ? error.message : \"Failed to initialize Microsoft Graph service\";\n            console.warn(\"Microsoft Graph service initialization failed:\", this.initError);\n        }\n    }\n    checkInitialization() {\n        if (!this.graphClient || !this.authProvider) {\n            throw new Error(this.initError || \"Microsoft Graph service not properly initialized\");\n        }\n    }\n    async getTeams() {\n        try {\n            this.checkInitialization();\n            const response = await this.graphClient.api(\"/groups\").filter(\"resourceProvisioningOptions/Any(x:x eq 'Team')\").select(\"id,displayName,description,webUrl\").get();\n            return response.value || [];\n        } catch (error) {\n            console.error(\"Error fetching teams:\", error);\n            throw new Error(\"Failed to fetch teams\");\n        }\n    }\n    async getChannels(teamId) {\n        try {\n            this.checkInitialization();\n            const response = await this.graphClient.api(`/teams/${teamId}/channels`).select(\"id,displayName,description,webUrl\").get();\n            return response.value || [];\n        } catch (error) {\n            console.error(`Error fetching channels for team ${teamId}:`, error);\n            throw new Error(`Failed to fetch channels for team ${teamId}`);\n        }\n    }\n    async getChannelFiles(teamId, channelId) {\n        try {\n            this.checkInitialization();\n            // Get the drive associated with the channel\n            const driveResponse = await this.graphClient.api(`/teams/${teamId}/channels/${channelId}/filesFolder`).get();\n            if (!driveResponse.parentReference?.driveId) {\n                return [];\n            }\n            const driveId = driveResponse.parentReference.driveId;\n            const folderId = driveResponse.id;\n            // Recursively get all files in the channel's folder\n            return await this.getFilesRecursively(driveId, folderId);\n        } catch (error) {\n            console.error(`Error fetching files for channel ${channelId}:`, error);\n            return [];\n        }\n    }\n    async getFilesRecursively(driveId, folderId, path = \"\") {\n        try {\n            this.checkInitialization();\n            const response = await this.graphClient.api(`/drives/${driveId}/items/${folderId}/children`).select(\"id,name,size,webUrl,file,folder,lastModifiedDateTime,parentReference\").get();\n            const items = response.value || [];\n            const files = [];\n            for (const item of items){\n                const currentPath = path ? `${path}/${item.name}` : item.name;\n                if (item.file) {\n                    // It's a file\n                    files.push({\n                        id: item.id,\n                        name: item.name,\n                        size: item.size || 0,\n                        webUrl: item.webUrl,\n                        downloadUrl: item[\"@microsoft.graph.downloadUrl\"],\n                        file: {\n                            mimeType: item.file.mimeType || \"application/octet-stream\"\n                        },\n                        lastModifiedDateTime: item.lastModifiedDateTime,\n                        parentReference: {\n                            path: currentPath\n                        }\n                    });\n                } else if (item.folder) {\n                    // It's a folder, recurse into it\n                    const subFiles = await this.getFilesRecursively(driveId, item.id, currentPath);\n                    files.push(...subFiles);\n                }\n            }\n            return files;\n        } catch (error) {\n            console.error(`Error fetching files from folder ${folderId}:`, error);\n            return [];\n        }\n    }\n    async createFolder(driveId, parentFolderId, folderName) {\n        try {\n            this.checkInitialization();\n            const response = await this.graphClient.api(`/drives/${driveId}/items/${parentFolderId}/children`).post({\n                name: folderName,\n                folder: {},\n                \"@microsoft.graph.conflictBehavior\": \"rename\"\n            });\n            return response.id;\n        } catch (error) {\n            console.error(`Error creating folder ${folderName}:`, error);\n            throw new Error(`Failed to create folder ${folderName}`);\n        }\n    }\n    async copyFile(driveId, fileId, targetFolderId, newName) {\n        try {\n            this.checkInitialization();\n            await this.graphClient.api(`/drives/${driveId}/items/${fileId}/copy`).post({\n                parentReference: {\n                    driveId: driveId,\n                    id: targetFolderId\n                },\n                name: newName\n            });\n        } catch (error) {\n            console.error(`Error copying file ${fileId}:`, error);\n            throw new Error(`Failed to copy file ${fileId}`);\n        }\n    }\n    async getTeamDrive(teamId) {\n        try {\n            this.checkInitialization();\n            const response = await this.graphClient.api(`/groups/${teamId}/drive`).select(\"id\").get();\n            const rootResponse = await this.graphClient.api(`/drives/${response.id}/root`).select(\"id\").get();\n            return {\n                driveId: response.id,\n                rootFolderId: rootResponse.id\n            };\n        } catch (error) {\n            console.error(`Error getting drive for team ${teamId}:`, error);\n            throw new Error(`Failed to get drive for team ${teamId}`);\n        }\n    }\n}\nconst graphService = new MicrosoftGraphService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/microsoft-graph.ts\n");

/***/ }),

/***/ "(rsc)/./lib/types.ts":
/*!**********************!*\
  !*** ./lib/types.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FileCategory: () => (/* binding */ FileCategory),\n/* harmony export */   FileStatus: () => (/* binding */ FileStatus)\n/* harmony export */ });\nvar FileCategory;\n(function(FileCategory) {\n    FileCategory[\"OPERATIONS\"] = \"OPERATIONS\";\n    FileCategory[\"ESTIMATING\"] = \"ESTIMATING\";\n    FileCategory[\"ACCOUNTING\"] = \"ACCOUNTING\";\n    FileCategory[\"FINANCE\"] = \"FINANCE\";\n    FileCategory[\"MARKETING\"] = \"MARKETING\";\n    FileCategory[\"OFFICE\"] = \"OFFICE\";\n    FileCategory[\"UNCATEGORIZED\"] = \"UNCATEGORIZED\";\n})(FileCategory || (FileCategory = {}));\nvar FileStatus;\n(function(FileStatus) {\n    FileStatus[\"DISCOVERED\"] = \"DISCOVERED\";\n    FileStatus[\"CATEGORIZED\"] = \"CATEGORIZED\";\n    FileStatus[\"ORGANIZED\"] = \"ORGANIZED\";\n    FileStatus[\"ERROR\"] = \"ERROR\";\n})(FileStatus || (FileStatus = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvdHlwZXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O1VBNENZQTs7Ozs7Ozs7R0FBQUEsaUJBQUFBOztVQVVBQzs7Ozs7R0FBQUEsZUFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hcHAvLi9saWIvdHlwZXMudHM/MmE1NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCBpbnRlcmZhY2UgVGVhbURhdGEge1xuICBpZDogc3RyaW5nO1xuICB0ZWFtSWQ6IHN0cmluZztcbiAgZGlzcGxheU5hbWU6IHN0cmluZztcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIHdlYlVybD86IHN0cmluZztcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICB1cGRhdGVkQXQ6IERhdGU7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2hhbm5lbERhdGEge1xuICBpZDogc3RyaW5nO1xuICBjaGFubmVsSWQ6IHN0cmluZztcbiAgZGlzcGxheU5hbWU6IHN0cmluZztcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIHdlYlVybD86IHN0cmluZztcbiAgdGVhbUlkOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRmlsZURhdGEge1xuICBpZDogc3RyaW5nO1xuICBmaWxlSWQ6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICBzaXplOiBiaWdpbnQ7XG4gIG1pbWVUeXBlOiBzdHJpbmc7XG4gIGV4dGVuc2lvbj86IHN0cmluZztcbiAgd2ViVXJsOiBzdHJpbmc7XG4gIGRvd25sb2FkVXJsPzogc3RyaW5nO1xuICBwYXJlbnRQYXRoOiBzdHJpbmc7XG4gIHJlbGF0aXZlUGF0aDogc3RyaW5nO1xuICBjYXRlZ29yeTogRmlsZUNhdGVnb3J5O1xuICBjb25maWRlbmNlOiBudW1iZXI7XG4gIGlzTWFudWFsbHlTZXQ6IGJvb2xlYW47XG4gIHN0YXR1czogRmlsZVN0YXR1cztcbiAgb3JnYW5pemVkUGF0aD86IHN0cmluZztcbiAgb3JnYW5pemVkQXQ/OiBEYXRlO1xuICBjcmVhdGVkQXQ6IERhdGU7XG4gIG1vZGlmaWVkQXQ6IERhdGU7XG4gIGxhc3RTY2FubmVkQXQ6IERhdGU7XG4gIHRlYW1JZD86IHN0cmluZztcbiAgY2hhbm5lbElkPzogc3RyaW5nO1xufVxuXG5leHBvcnQgZW51bSBGaWxlQ2F0ZWdvcnkge1xuICBPUEVSQVRJT05TID0gJ09QRVJBVElPTlMnLFxuICBFU1RJTUFUSU5HID0gJ0VTVElNQVRJTkcnLFxuICBBQ0NPVU5USU5HID0gJ0FDQ09VTlRJTkcnLFxuICBGSU5BTkNFID0gJ0ZJTkFOQ0UnLFxuICBNQVJLRVRJTkcgPSAnTUFSS0VUSU5HJyxcbiAgT0ZGSUNFID0gJ09GRklDRScsXG4gIFVOQ0FURUdPUklaRUQgPSAnVU5DQVRFR09SSVpFRCdcbn1cblxuZXhwb3J0IGVudW0gRmlsZVN0YXR1cyB7XG4gIERJU0NPVkVSRUQgPSAnRElTQ09WRVJFRCcsXG4gIENBVEVHT1JJWkVEID0gJ0NBVEVHT1JJWkVEJyxcbiAgT1JHQU5JWkVEID0gJ09SR0FOSVpFRCcsXG4gIEVSUk9SID0gJ0VSUk9SJ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNjYW5Qcm9ncmVzcyB7XG4gIHNlc3Npb25JZDogc3RyaW5nO1xuICBzdGF0dXM6ICdSVU5OSU5HJyB8ICdDT01QTEVURUQnIHwgJ0ZBSUxFRCc7XG4gIGZpbGVzRm91bmQ6IG51bWJlcjtcbiAgZmlsZXNQcm9jZXNzZWQ6IG51bWJlcjtcbiAgY3VycmVudFRlYW0/OiBzdHJpbmc7XG4gIGN1cnJlbnRDaGFubmVsPzogc3RyaW5nO1xuICBlcnJvcnM/OiBzdHJpbmdbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBHcmFwaEF1dGhDb25maWcge1xuICB0ZW5hbnRJZDogc3RyaW5nO1xuICBjbGllbnRJZDogc3RyaW5nO1xuICBjbGllbnRTZWNyZXQ6IHN0cmluZztcbiAgc2NvcGVzOiBzdHJpbmdbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNaWNyb3NvZnRHcmFwaEZpbGUge1xuICBpZDogc3RyaW5nO1xuICBuYW1lOiBzdHJpbmc7XG4gIHNpemU6IG51bWJlcjtcbiAgd2ViVXJsOiBzdHJpbmc7XG4gIGRvd25sb2FkVXJsPzogc3RyaW5nO1xuICBmaWxlPzoge1xuICAgIG1pbWVUeXBlOiBzdHJpbmc7XG4gIH07XG4gIGxhc3RNb2RpZmllZERhdGVUaW1lOiBzdHJpbmc7XG4gIHBhcmVudFJlZmVyZW5jZToge1xuICAgIHBhdGg6IHN0cmluZztcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNaWNyb3NvZnRUZWFtIHtcbiAgaWQ6IHN0cmluZztcbiAgZGlzcGxheU5hbWU6IHN0cmluZztcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIHdlYlVybD86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNaWNyb3NvZnRDaGFubmVsIHtcbiAgaWQ6IHN0cmluZztcbiAgZGlzcGxheU5hbWU6IHN0cmluZztcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIHdlYlVybD86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBDYXRlZ29yaXphdGlvblJlc3VsdCB7XG4gIGNhdGVnb3J5OiBGaWxlQ2F0ZWdvcnk7XG4gIGNvbmZpZGVuY2U6IG51bWJlcjtcbiAgcmVhc29uOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgT3JnYW5pemF0aW9uU3RhdHMge1xuICB0b3RhbEZpbGVzOiBudW1iZXI7XG4gIGNhdGVnb3JpemVkRmlsZXM6IG51bWJlcjtcbiAgb3JnYW5pemVkRmlsZXM6IG51bWJlcjtcbiAgZmlsZXNCeUNhdGVnb3J5OiBSZWNvcmQ8RmlsZUNhdGVnb3J5LCBudW1iZXI+O1xuICBsYXN0U2NhbkRhdGU/OiBEYXRlO1xufVxuIl0sIm5hbWVzIjpbIkZpbGVDYXRlZ29yeSIsIkZpbGVTdGF0dXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/types.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/tslib","vendor-chunks/@azure","vendor-chunks/tr46","vendor-chunks/@microsoft","vendor-chunks/semver","vendor-chunks/node-fetch","vendor-chunks/whatwg-url","vendor-chunks/jsonwebtoken","vendor-chunks/lodash.includes","vendor-chunks/jws","vendor-chunks/lodash.once","vendor-chunks/jwa","vendor-chunks/lodash.isinteger","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/webidl-conversions","vendor-chunks/lodash.isplainobject","vendor-chunks/ms","vendor-chunks/uuid","vendor-chunks/lodash.isstring","vendor-chunks/lodash.isnumber","vendor-chunks/lodash.isboolean","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time","vendor-chunks/isomorphic-fetch"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fscan%2Froute&page=%2Fapi%2Fscan%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fscan%2Froute.ts&appDir=C%3A%5CUsers%5CLogan%20Ferris%5CDownloads%5Cteams-file-organizer%5Capp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CLogan%20Ferris%5CDownloads%5Cteams-file-organizer%5Capp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();